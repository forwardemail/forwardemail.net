footer.mt-auto(aria-label=t("Footer"))
  if ctx.pathWithoutLocale !== '/' && ctx.pathWithoutLocale !== '/tti'
    include _tti
  //-.
    if !isHelp
      .bg-primary.text-center.py-3.border-top.border-themed
        .container
          .row
            if !user
              .col-6
                a.btn.btn-dark(
                  href=l("/register"),
                  role="button",
                  data-toggle="modal-anchor",
                  data-target="#modal-sign-up"
                )
                  = t("Get started")
                  = " "
                  i.fa.fa-fw.fa-angle-double-right.align-middle
            div(class=user ? "col-12" : "col-6")
              a.btn.btn-dark(
                href=l("/help"),
                role=isHelp ? "link" : "button",
                data-target=isHelp ? false : "#modal-help"
              )= t("Need help?")
  .bg-dark.text-white
    .container.py-3.py-md-4.py-lg-5.text-center.text-lg-left
      if !isBot(ctx.get('User-Agent'))
        if (domain && domain.name && config.ubuntuTeamMapping && Object.keys(config.ubuntuTeamMapping).includes(domain.name)) || ['/ubuntu','/kubuntu','/lubuntu','/edubuntu','/ubuntu-studio'].includes(ctx.pathWithoutLocale)
          //- Empty on purpose
        else
          .small.text-center.mb-2: strong= t("Learn more about:")
          .text-center.mb-3
          ul.list-inline.mb-3.text-center
            li.list-inline-item.mb-3
              a.btn.btn-outline-light(
                href=l("/blog/docs/best-email-forwarding-service")
              )
                i.fa.fa-lock.mr-2
                = t("Privacy Protected")
            li.list-inline-item.mb-3
              a.btn.btn-outline-light(
                href=l("/guides/send-email-with-custom-domain-smtp")
              )
                i.fas.fa-network-wired.mr-2
                = t("Custom Domain Email")
            li.list-inline-item.mb-3
              a.btn.btn-outline-light(
                href=l("/blog/docs/why-open-source-email-security-privacy")
              )
                i.fas.fa-code-branch.mr-2
                = t("Open Source Email")
            li.list-inline-item.mb-3
              a.btn.btn-outline-light(
                href=l("/blog/docs/email-privacy-protection-technical-implementation")
              )
                i.fas.fa-share.mr-2
                = t("Secure Email Forwarding")
            li.list-inline-item.mb-3
              a.btn.btn-outline-light(
                href=l("/blog/docs/building-reliable-payment-system-stripe-paypal")
              )
                i.fa.fa-shield.mr-2
                = t("Secure Checkout")
          .small.text-center.mb-2: strong= t("Payment methods accepted:")
          ul.list-inline.mb-3.text-center.mb-5
            li.list-inline-item
              a.badge.bg-white.text-dark.small(href=l("/blog/docs/crypto-payments-privacy-email-service"))
                i.fab.fa-btc
                = " Crypto"
            li.list-inline-item.badge.bg-white.text-dark.small
              i.fab.fa-paypal
              = " PayPal"
            li.list-inline-item.badge.bg-white.text-dark.small
              i.fab.fa-cc-visa
              = " Visa"
            li.list-inline-item.badge.bg-white.text-dark.small
              i.fab.fa-cc-mastercard
              = " Mastercard"
            li.list-inline-item.badge.bg-white.text-dark.small
              i.fab.fa-cc-amex
              = " American Express"
            li.list-inline-item.badge.bg-white.text-dark.small
              i.fab.fa-cc-discover
              = " Discover"
            li.list-inline-item.badge.bg-white.text-dark.small
              i.fab.fa-cc-diners-club
              = " Diners Club"
            li.list-inline-item.badge.bg-white.text-dark.small
              i.fab.fa-cc-jcb
              = " JCB"
            li.list-inline-item.badge.bg-white.text-dark.small
              = " China UnionPay"
            li.list-inline-item.badge.bg-white.text-dark.small
              i.fab.fa-alipay
              = " Alipay"
            li.list-inline-item.badge.bg-white.text-dark.small
              i.fab.fa-cc-apple-pay
              = " Apple Pay"
            li.list-inline-item.badge.bg-white.text-dark.small
              i.fab.fa-google-pay
              = " Google Pay"
            li.list-inline-item.badge.bg-white.text-dark.small
              i.fab.fa-amazon-pay
              = " Amazon Pay"
            li.list-inline-item.badge.bg-white.text-dark.small Cash App
            li.list-inline-item.badge.bg-white.text-dark.small Link
            li.list-inline-item.badge.bg-white.text-dark.small Bancontact
            li.list-inline-item.badge.bg-white.text-dark.small EPS
            li.list-inline-item.badge.bg-white.text-dark.small giropay
            li.list-inline-item.badge.bg-white.text-dark.small
              i.fab.fa-ideal
              = " iDEAL"
            li.list-inline-item.badge.bg-white.text-dark.small Przelewy24
            li.list-inline-item.badge.bg-white.text-dark.small Sofort
            li.list-inline-item.badge.bg-white.text-dark.small Affirm
            li.list-inline-item.badge.bg-white.text-dark.small Afterpay / Clearpay
            li.list-inline-item.badge.bg-white.text-dark.small Klarna
            li.list-inline-item.badge.bg-white.text-dark.small= t("SEPA Direct Debit")
            li.list-inline-item.badge.bg-white.text-dark.small= t("Canadian pre-authorized debits")
            li.list-inline-item.badge.bg-white.text-dark.small= t("ACH Direct Debit")
            li.list-inline-item.badge.bg-white.text-dark.small= t("Bank Transfer")
            li.list-inline-item.badge.bg-white.text-dark.small= t("Domestic Wire Transfer (Enterprise)")
            li.list-inline-item.badge.bg-white.text-dark.small= t("International Wire Transfer (Enterprise)")
      .d-flex.flex-column.flex-lg-row
        if !isBot(ctx.get('User-Agent'))
          .flex-nowrap.order-3.order-lg-0.d-flex.flex-column.flex-grow-1.mr-lg-3
            .no-js
              hr.d-lg-none.w-100
              .dropdown.dropup
                a#navbar-dropdown-language-btn.btn.btn-sm.btn-outline-light.dropdown-toggle(
                  href=ctx.url,
                  role="button",
                  data-toggle="dropdown",
                  data-boundary="window",
                  aria-haspopup="true",
                  aria-expanded="false"
                )
                  = `${titleize(t(currentLanguage))} ${ctx.locale !== "en" && currentLanguage !== titleize(currentLanguage) ? `(${titleize(currentLanguage)})` : ""}`
                ul#navbar-dropdown-language-ul.dropdown-menu(
                  role="menu",
                  aria-expanded="false",
                  aria-hidden="true",
                  aria-labelledby="navbar-dropdown-language-btn"
                )
                  each language in availableLanguages
                    if language.locale !== locale
                      li: a.dropdown-item(href=language.url)= `${titleize(t(language.name))} ${ctx.locale !== "en" ? `(${titleize(language.name)})` : ""}`
            hr.d-lg-none.w-100
            .mt-auto
              a(href="#", aria-label=t("Go to top"))
                noscript
                  img.d-inline-block.mx-lg-auto(
                    src=manifest("img/logo-square.svg"),
                    width=50,
                    height=50,
                    alt="Go to top"
                  )
                img.d-inline-block.mx-lg-auto.lazyload(
                  data-src=manifest("img/logo-square.svg"),
                  width=50,
                  height=50,
                  alt="Go to top"
                )
        //-.
          .flex-wrap.flex-fill.mr-lg-3
            h2.h5.mb-2= t("Guides")
            ul.list-unstyled.mb-0
              //-.
                li
                  a.d-block.text-white.py-2.py-md-0(
                    href=l('/guides/professional-business-email')
                  )= t('Professional business email')
                li
                  a.d-block.text-white.py-2.py-md-0(
                    href=l('/guides/how-to-setup-business-email')
                  )= t('How to setup business email')
                li
                  a.d-block.text-white.py-2.py-md-0(
                    href=l('/guides/custom-domain-email-service')
                  )= t('Custom domain email service')
                li
                  a.d-block.text-white.py-2.py-md-0(
                    href=l('/guides/free-business-email-address')
                  )= t('Free business email address')
              li
                a.d-block.text-white.py-2.py-md-0(
                  href=l("/guides/send-email-with-custom-domain-smtp")
                )= t("Send Email with Custom Domain")
              li
                a.d-block.text-white.py-2.py-md-0(
                  href=l("/guides/send-mail-as-gmail-custom-domain")
                )= t("Send Mail As with Gmail")
              each provider in nsProviders
                li
                  a.d-block.text-white.py-2.py-md-0(
                    href=domain && domain.name ? l(`/guides/${provider.slug}?domain=${domain.name}`) : l(`/guides/${provider.slug}`)
                  )
                    = provider.name
              li: a.d-block.text-white.py-2.py-md-0(
                href=l("/faq#table-dns-management-by-registrar")
              )= t("Other providers")
          hr.d-lg-none.w-100

        .flex-wrap.flex-fill.mr-lg-3
          hr.d-lg-none.w-100
          h2.h5.mb-2: a.text-white(href=l("/blog/open-source"))= t("Apps")
          ul.list-unstyled.mb-0.mb-lg-3
            //- Apple
            li: a.d-block.text-white.py-2.py-md-0(
              href=l("/blog/open-source/apple-email-clients")
            )
              = "Apple"
              != "&reg;"
            //- Windows
            li: a.d-block.text-white.py-2.py-md-0(
              href=l("/blog/open-source/windows-email-clients")
            )
              = "Windows"
              != "&reg;"
            //- Android
            li: a.d-block.text-white.py-2.py-md-0(
              href=l("/blog/open-source/android-email-clients")
            )
              i.fa-fw.fab.fa-android
              = " "
              = "Android"
              != "&trade;"
            //- Linux
            li: a.d-block.text-white.py-2.py-md-0(
              href=l("/blog/open-source/linux-email-clients")
            )
              i.fa-fw.fab.fa-linux
              = " "
              = "Linux"
              != "&reg;"
            li: a.d-block.text-white.py-2.py-md-0(
              href=l("/blog/open-source/desktop-email-clients")
            )
              i.fa-fw.fas.fa-desktop
              = " "
              = t("Desktop")
            //- Web
            li: a.d-block.text-white.py-2.py-md-0(
              href=l("/blog/open-source/web-email-clients")
            )
              if ctx.get("User-Agent") && ctx.get("User-Agent").includes("Firefox")
                i.fab.fa-fw.fa-firefox-browser
                = " "
                = "Firefox"
                != "&reg;"
              else if ctx.get("User-Agent") && ctx.get("User-Agent").includes("Safari") && !ctx.get("User-Agent").includes("Chrome")
                = " "
                = "Safari"
                != "&reg;"
              else
                i.fab.fa-fw.fa-chrome
                = " "
                = "Chrome"
                != "&reg;"
            //- Terminal
            li: a.d-block.text-white.py-2.py-md-0(
              href=l("/blog/open-source/terminal-email-clients")
            )
              i.fa-fw.fas.fa-terminal
              = " "
              = "Terminal"

          hr.d-lg-none.w-100
          h2.h5.mb-2: a.text-white(href=l("/guides"))= t("Guides")
          ul.list-unstyled.mb-0.mb-lg-3
            li: a.d-block.text-white.py-2.py-md-0(
              href=l("/guides/smtp-integration")
            )
              = t("SMTP Integration Examples")
            li: a.d-block.text-white.py-2.py-md-0(
              href=l("/guides/send-email-with-custom-domain-smtp")
            )
              = t("Send Email with Custom Domain")
            li: a.d-block.text-white.py-2.py-md-0(
              href=l("/guides/send-mail-as-gmail-custom-domain")
            )
              = t("Send Mail As with Gmail")
            if isBot(ctx.get('User-Agent'))
              each provider in nsProviders
                li: a.d-block.text-white.py-2.py-md-0(
                  title=striptags(t('How to Setup Email with <span class="notranslate">%s</span>', provider.name)),
                  href=domain && domain.name ? l(`/guides/${provider.slug}?domain=${domain.name}`) : l(`/guides/${provider.slug}`)
                )!= t('How to Setup Email with <span class="notranslate">%s</span>', provider.name)
            else
              li: a.d-block.text-white.py-2.py-md-0(href=l("/guides"))= t("Email Setup Guides")
            li: a.d-block.text-white.py-2.py-md-0(
              href=domain && domain.name ? l(`/guides/port-25-blocked-by-isp-workaround?domain=${domain.name}`) : l("/guides/port-25-blocked-by-isp-workaround")
            )= t("Port 25 blocked by ISP")
          hr.d-lg-none.w-100
          h2.h5.mb-2: a.text-white(href=l("/resources"))= t("Resources")
          ul.list-unstyled(class=isBot(ctx.get("User-Agent")) ? "" : "mb-0")
            - let pricingPageHref = domain && domain.name ? l(`/private-business-email?domain=${domain.name}`) : l("/private-business-email");
            if !isBot(ctx.get('User-Agent'))
              - pricingPageHref += "?pricing=true";
            li: a.d-block.text-white.py-2.py-md-0(href=pricingPageHref)
              if isBot(ctx.get('User-Agent'))
                = t("Private Business Email")
              else
                != t("Features &amp; Pricing")
            //- li: a.d-block.text-white.py-2.py-md-0(href=l("/email-analytics"))= t("Email Analytics")
            li: a.d-block.text-white.py-2.py-md-0(
              href=domain && domain.name ? l(`/faq?domain=${domain.name}`) : l("/faq")
            )= t("Frequently Asked Questions")
            li: a.d-block.text-white.py-2.py-md-0(href=l("/tti"))= t("Time to Inbox")
            if !isBot(ctx.get('User-Agent'))
              li: a.d-block.text-white.py-2.py-md-0(
                href=l("/help"),
                role=isHelp ? "link" : "button",
                data-target=isHelp ? false : "#modal-help"
              )= t("Help")
            li: a.d-block.text-white.py-2.py-md-0(
              href=l("/disposable-addresses")
            )= t("Disposable Addresses")
            li: a.d-block.text-white.py-2.py-md-0(href=l("/domain-registration"))= t("Domain Registration")
            li: a.d-block.text-white.py-2.py-md-0(href=l("/encrypt"))
              != t('Encrypt Plaintext <span class="notranslate">TXT</span> Record')
            li: a.d-block.text-white.py-2.py-md-0(
              href=l("/reserved-email-addresses")
            )= t("Reserved Email Addresses")
            if !isBot(ctx.get('User-Agent'))
              li: a.d-block.text-white.py-2.py-md-0(href=l("/denylist"))= t("Denylist Removal")
          //-.
            if isBot(ctx.get('User-Agent'))
              hr.d-lg-none.w-100
              h2.h5.mb-2= t("Use Cases")
              ul.list-unstyled.mb-0
                each useCase in Object.keys(useCases)
                  li
                    a.d-block.text-white.py-2.py-md-0(href=l(useCase))
                      != t(useCases[useCase][0])
        hr.d-lg-none.w-100
        .flex-wrap.flex-fill.mr-lg-3
          h2.h5.mb-2: a.text-white(href=l("/blog/docs"))= t("Developers")
          ul.list-unstyled.mb-0.mb-lg-3
            li: a.d-block.text-white.py-2.py-md-0(href=l("/ips"))= t("IP Addresses")
            li: a.d-block.text-white.py-2.py-md-0(href=l("/email-api"))= t("Email API Reference")
            li: a.d-block.text-white.py-2.py-md-0(
              href=isBot(ctx.get("User-Agent")) ? l("/free-email-webhooks") : l("/faq#do-you-support-webhooks")
            )
              if isBot(ctx.get("User-Agent"))
                = t("Free Email Webhooks")
              else
                = t("Email Webhooks")
            li: a.d-block.text-white.py-2.py-md-0(
              href=isBot(ctx.get("User-Agent")) ? l("/self-hosted") : l("/faq#do-you-support-self-hosting")
            )
              if isBot(ctx.get("User-Agent"))
                = t("Self Hosted")
              else
                = t("Self Hosted Email")
            li: a.d-block.text-white.py-2.py-md-0(
              href=l("/faq#do-you-support-bounce-webhooks")
            )= t("Bounce Webhooks")
            li: a.d-block.text-white.py-2.py-md-0(
              href=l("/email-forwarding-regex-pattern-filter")
            )= t("Regex Email Forwarding")
            if platforms.length > 0
              li: a.d-block.text-white.py-2.py-md-0(href=l("/blog/open-source"))= t("Open Source")
          if config.alternatives && config.alternatives.length > 0
            hr.d-lg-none.w-100
            h2.h5.mb-2= t("Email Service Comparison")
            hr.d-none.d-md-none.d-lg-none.w-100
            ul.list-unstyled.mb-0.mb-lg-3
              each str in ['best-email-service', 'best-private-email-service', 'best-open-source-email-service', 'best-transactional-email-service', 'best-email-api-developer-service', 'best-email-spam-filtering-service']
                li
                  a.d-block.text-white.py-2.py-md-0(href=l(`/blog/${str}`))
                    - let title = config.meta[`/blog/${str}`][0];
                    if !isBot(ctx.get("User-Agent"))
                      - title = title.split("Best ")[1].split(" in")[0];
                    != striptags(t(title))
          if developerDocs.length > 0
            hr.d-lg-none.w-100
            h2.h5.mb-2= t("Developer Articles")
            hr.d-none.d-md-none.d-lg-none.w-100
            ul.list-unstyled.mb-0.mb-lg-3
              each doc in developerDocs
                li
                  a.d-block.text-white.py-2.py-md-0(href=l(doc.slug))
                    if !isBot(ctx.get('User-Agent')) && doc.icon
                      i(class=doc.icon)
                      = " "
                    if isBot(ctx.get('User-Agent'))
                      = t(doc.shortTitle || doc.title)
                    else
                      = t(doc.shortTitle || doc.title.replace("Best ", ""))
          if platforms.length > 0 && isBot(ctx.get('User-Agent'))
            hr.d-lg-none.w-100
            h2.h5.mb-2: a.text-white(href=l("/blog/open-source"))= t("Open Source Email Clients and Servers")
            ul.list-unstyled.mb-0.mb-lg-3
              - const tools = [];
              - const list = Object.keys(config.meta).filter((key) => key !== "/blog/open-source" && key.startsWith("/blog/open-source"));
              each item in list
                - const match = config.meta[item];
                if match
                  - tools.push({ title: match[0].replace(config.metaTitleAffix, ""), description: match[1], slug: item });
              each tool in tools
                li
                  a.d-block.text-white.py-2.py-md-0(
                    href=l(tool.slug),
                    title=striptags(t(tool.title))
                  )!= t(tool.title)
        hr.d-lg-none.w-100
        .flex-wrap.flex-fill.d-flex.flex-column
          div
            h2.h5.mb-2= t("Community")
            ul.list-unstyled.mb-0.mb-lg-3
              li
                a.d-block.text-white.py-2.py-md-0(
                  href=l("/my-account/profile?newsletter=true")
                )
                  i.fa.fa-fw.fas.fa-newspaper
                  = " "
                  = t("Newsletter")
              li
                a.d-block.text-white.py-2.py-md-0(
                  href="https://github.com/forwardemail",
                  target="_blank",
                  rel="noopener noreferrer"
                )
                  i.fa.fa-fw.fa-github
                  = " "
                  = "GitHub"
              li
                a.d-block.text-white.py-2.py-md-0(
                  href="https://x.com/fwdemail",
                  target="_blank",
                  rel="noopener noreferrer"
                )
                  i.fa.fa-fw.fa-twitter-x
                  = " "
                  = "@fwdemail"
              li
                a.d-block.text-white.py-2.py-md-0(
                  href="https://matrix.to/#/#forwardemail:matrix.org",
                  target="_blank",
                  rel="noopener noreferrer"
                )
                  i.fa-fw.fa.fa-comment
                  = " "
                  = "Matrix"
              li
                a.d-block.text-white.py-2.py-md-0(
                  href="https://youtube.com/forwardemail",
                  target="_blank",
                  rel="noopener noreferrer"
                )
                  i.fab.fa-fw.fa-youtube
                  = " "
                  = "YouTube"
              li
                a.d-block.text-white.py-2.py-md-0(
                  href=`${config.urls.web}/blog/feed/atom`,
                  target="_blank",
                  rel="noopener noreferrer"
                )
                  i.fa-fw.fas.fa-rss
                  = " "
                  = "RSS Feed"
            hr.d-lg-none.w-100
            h2.h5.mb-2= t("Company")
            ul.list-unstyled.mb-0.mb-lg-3
              li: a.d-block.text-white.py-2.py-md-0(href=l("/about"))= t("About")
              li: a.d-block.text-white.py-2.py-md-0(href=l("/press"))= t("Press")
              li: a.d-block.text-white.py-2.py-md-0(href=l("/privacy"))= t("Privacy")
              li: a.d-block.text-white.py-2.py-md-0(href=l("/terms"))= t("Terms")
              li: a.d-block.text-white.py-2.py-md-0(href=l("/gdpr"))= t("GDPR")
              li: a.d-block.text-white.py-2.py-md-0(href=l("/dpa"))= t("DPA")
              li: a.d-block.text-white.py-2.py-md-0(
                href=`mailto:careers@${config.supportEmail.split('@')[1]}`,
                target="_blank",
                rel="noopener noreferrer",
                data-toggle="tooltip",
                data-title=t("Send us an email"),
                data-placement="bottom"
              )= t("Careers")
              li: a.d-block.text-white.py-2.py-md-0(href=l("/security"))= t("Security")
              li: a.d-block.text-white.py-2.py-md-0(href=l("/report-abuse"))= t("Report Abuse")
              if !isBot(ctx.get('User-Agent')) && config.env !== 'test'
                li: a.d-block.text-white.py-2.py-md-0(
                  href="https://status.forwardemail.net/",
                  target="_blank",
                  rel="noopener noreferrer",
                  data-toggle="tooltip",
                  data-title=statusOutage ? t("Issue Detected") : t("100% Systems Online"),
                  data-placement="bottom"
                )
                  = t("Status Page")
                  = " "
                  if statusOutage
                    span.badge.badge-pill.badge-warning.text-monospace= t("Issue")
                  else
                    span.badge.badge-pill.badge-success.text-monospace= t("100%")
              if !isBot(ctx.get('User-Agent'))
                li.small
                  a.d-block.text-white.font-weight-bold.py-2.py-md-0.text-monospace.small.mt-3(
                    href=`mailto:${config.supportEmail}`,
                    target="_blank",
                    rel="noopener noreferrer",
                    data-toggle="tooltip",
                    data-title=t("Send us an email"),
                    data-placement="bottom"
                  )= config.supportEmail
                li
                  a.badge.badge-success.font-weight-bold.p-2.mt-3(
                    href=config.openPGPKey,
                    target="_blank",
                    data-toggle="tooltip",
                    data-title=config.supportEmail
                  )
                    i.fa.fa-lock
                    = " "
                    = t("GPG Key")
                  = " "
                  a.badge.badge-dark.font-weight-bold.p-2.mt-3(
                    href=ctx.pathWithoutLocale === "/faq" ? "#do-you-support-openpgpmime-end-to-end-encryption-e2ee-and-web-key-directory-wkd" : l("/faq#do-you-support-openpgpmime-end-to-end-encryption-e2ee-and-web-key-directory-wkd"),
                    data-toggle=ctx.pathWithoutLocale === "/faq" ? "collapse" : "tooltip",
                    aria-controls=ctx.pathWithoutLocale === "/faq" ? "collapse-do-you-support-openpgpmime-end-to-end-encryption-e2ee-and-web-key-directory-wkd" : false,
                    data-target=ctx.pathWithoutLocale === "/faq" ? "#collapse-do-you-support-openpgpmime-end-to-end-encryption-e2ee-and-web-key-directory-wkd" : false,
                    data-title=t("Learn more"),
                    aria-label=t("We support OpenPGP and end-to-end encryption")
                  )
                    i.fa.fa-info-circle
        if isBot(ctx.get('User-Agent'))
          hr.d-lg-none.w-100
          .flex-wrap.flex-fill.d-flex.flex-column.ml-lg-3
            div
              h2.h5.mb-2= t("Languages")
              ul.list-unstyled.mb-0.small
                each language in availableLanguages
                  li: a.d-block.text-white.py-2.py-md-0(href=language.url)= `${titleize(t(language.name))} ${ctx.locale !== "en" ? `(${titleize(language.name)})` : ""}`
        else
          noscript
            hr.d-lg-none.w-100
            .flex-wrap.flex-fill.d-flex.flex-column.ml-lg-3
              div
                h2.h5.mb-2= t("Languages")
                ul.list-unstyled.mb-0.small
                  each language in availableLanguages
                    li: a.d-block.text-white.py-2.py-md-0(href=language.url)= `${titleize(t(language.name))} ${ctx.locale !== "en" ? `(${titleize(language.name)})` : ""}`
      .mt-5.text-white.small
        ul.list-inline.mb-3
          if !isBot(ctx.get('User-Agent'))
            li.list-inline-item.mb-3.mr-3
              a(
                aria-label=t("GitHub Repo stars"),
                href="https://github.com/forwardemail/forwardemail.net",
                target="_blank",
                rel="noopener noreferrer"
              )
                noscript
                  img(
                    alt=t("GitHub Repo stars"),
                    src="https://img.shields.io/github/stars/forwardemail/forwardemail.net",
                    height=20
                  )
                img.lazyload(
                  alt=t("GitHub Repo stars"),
                  height=20,
                  data-src="https://img.shields.io/github/stars/forwardemail/forwardemail.net"
                )
          li.list-inline-item.mb-3.mr-3
            a(
              aria-label=t("Qualys SSL Labs SSL Server Test"),
              href="https://www.ssllabs.com/ssltest/analyze.html?d=forwardemail.net&latest",
              target="_blank",
              rel="noopener noreferrer"
            )
              noscript
                img(
                  alt=t("Qualys SSL Labs SSL Server Test"),
                  src="https://img.shields.io/badge/Qualys_SSL_Labs-A+_Grade-green",
                  width=164,
                  height=20
                )
              img.lazyload(
                alt=t("Qualys SSL Labs SSL Server Test"),
                data-src="https://img.shields.io/badge/Qualys_SSL_Labs-A+_Grade-green",
                width=164,
                height=20
              )
          li.list-inline-item.mb-3
            a(
              href="https://observatory.mozilla.org/analyze/forwardemail.net",
              aria-label=t("Mozilla HTTP Observatory Grade"),
              target="_blank",
              rel="noopener noreferrer"
            )
              noscript
                img(
                  alt=t("Mozilla HTTP Observatory Grade"),
                  src="https://img.shields.io/mozilla-observatory/grade-score/forwardemail.net",
                  width=162,
                  height=20
                )
              img.lazyload(
                alt=t("Mozilla HTTP Observatory Grade"),
                data-src="https://img.shields.io/mozilla-observatory/grade-score/forwardemail.net",
                width=162,
                height=20
              )
        ul.list-inline.mb-3
          li.list-inline-item.mb-3
            a(
              aria-label=t("Internet Site Test"),
              href="https://internet.nl/site/forwardemail.net",
              target="_blank",
              rel="noopener noreferrer"
            )
              noscript
                img(
                  alt=t("Internet Site Test"),
                  src=manifest("img/internet-nl-site-test.svg"),
                  width=204,
                  height=39
                )
              img.lazyload(
                alt=t("Internet Site Test"),
                data-src=manifest("img/internet-nl-site-test.svg"),
                width=204,
                height=39
              )
          li.list-inline-item.mb-3
            a(
              aria-label=t("Internet Mail Test"),
              href="https://internet.nl/mail/forwardemail.net",
              target="_blank",
              rel="noopener noreferrer"
            )
              noscript
                img(
                  alt=t("Internet Mail Test"),
                  src=manifest("img/internet-nl-mail-test.svg"),
                  width=204,
                  height=39
                )
              img.lazyload(
                alt=t("Internet Mail Test"),
                data-src=manifest("img/internet-nl-mail-test.svg"),
                width=204,
                height=39
              )
        ul.list-inline.mb-3
          li.list-inline-item
            a(
              aria-label=t("Hardenize Badge"),
              href="https://www.hardenize.com/report/forwardemail.net?summary",
              target="_blank",
              rel="noopener noreferrer"
            )
              noscript
                img(
                  alt=t("Hardenize Badge"),
                  src="https://badge.hardenize.com/v2/images/hardenize-badge-forwardemail.net.png",
                  width="70",
                  height="110"
                )
              img.lazyload(
                alt=t("Hardenize Badge"),
                data-src="https://badge.hardenize.com/v2/images/hardenize-badge-forwardemail.net.png",
                width="70",
                height="110"
              )
        ul.list-unstyled.small
          // <https://www.apple.com/legal/intellectual-property/trademark/appletmlist.html>
          li= t("Apple, Mac mini, Macbook, iMac, iPhone, macOS, iPad, watchOS, and Safari are registered trademarks of Apple Inc.")
          li= t("IOS is a trademark or registered trademark of Cisco.")
          //- <https://about.google/brand-resource-center/trademark-list/>
          //- <https://developer.android.com/distribute/marketing-tools/brand-guidelines>
          li= t("Android, Gmail, Google Chrome, Google Pixel, Chrome OS, Chromebook, and Chromium are trademarks of Google LLC.")
          //- <https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks>
          li= t("Microsoft, Windows, Internet Explorer, and Microsoft Edge are trademarks of the Microsoft group of companies.")
          //- <https://www.mozilla.org/en-US/foundation/trademarks/list/>
          //- <https://www-archive.mozilla.org/foundation/trademarks/policy>
          li= t("Mozilla, Firefox, and Thunderbird are trademarks or registered trademarks of the Mozilla Foundation.")
          li!= t('Canonical, Ubuntu, Kubuntu, and <span class="notranslate">U1</span> are registered trademarks of Canonical Ltd.')
          //- <https://www.linuxfoundation.org/legal/trademark-usage>
          //- <https://isc.tamu.edu/~lewing/linux/> (Tux the Penguin)
          li= t("Linux is the registered trademark of Linus Torvalds.")
        ul.list-unstyled.small
          li
            != "&copy;"
            = " "
            = dayjs().format("YYYY")
            = " "
            = "Forward Email LLC"
          li= t("All rights reserved. All trademarks are property of their respective owners in the US and other countries.")
