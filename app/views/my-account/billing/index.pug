extends ../../layout

block body
  #modal-change-plan.modal.fade(
    tabindex="-1",
    role="dialog",
    aria-labelledby="modal-change-plan-title",
    aria-hidden="true"
  )
    .modal-dialog(role="document")
      .modal-content
        .modal-header.text-center.d-block
          h4#modal-change-plan-title.d-inline-block.ml-4= t("Change Plan")
          button.close(type="button", data-dismiss="modal", aria-label="Close")
            span(aria-hidden="true") &times;
        .modal-body
          .alert.alert-warning.small.text-center!= t('You are currently on the <span class="notranslate">%s</span> plan.', t(titleize(humanize(user.plan))))

          //-
          //- if the user was within 30 days of their plan_set_at
          //- then inform them that they will be getting a full refund
          //-
          if user.plan !== 'free' && paymentCount === 0 && paymentIds.length > 0 && dayjs().isBefore(dayjs(user[config.userFields.planSetAt]).add(30, 'days'))
            .alert.alert-success.small.text-center!= t("Don't worry &ndash; we'll automatically refund previous payments.")

          if user.plan === 'free'
            a.btn.btn-lg.btn-block.btn-success.mb-3(
              href=l("/my-account/billing/upgrade?plan=enhanced_protection")
            )= t("Upgrade to Enhanced Protection")
            a.btn.btn-lg.btn-block.btn-primary(
              href=l("/my-account/billing/upgrade?plan=team")
            )= t("Upgrade to Team")
          else if user.plan === 'enhanced_protection'
            a.btn.btn-lg.btn-block.btn-dark.mb-3(
              href=l("/my-account/billing/upgrade?plan=team")
            )
              = t("Upgrade to Team")
              if conversion.team.length > 0 && (paymentCount !== 0 || paymentIds.length === 0)
                br
                span.badge.badge-pill.badge-success
                  = t("Conversion Credit:")
                  = " "
                  = dayjs().add(_.sumBy(conversion.team, "duration"), "ms").locale(ctx.locale).fromNow(true)
          else if user.plan === 'team'
            a.btn.btn-lg.btn-block.btn-dark.mb-3(
              href=l("/my-account/billing/upgrade?plan=enhanced_protection")
            )
              = t("Downgrade to Enhanced Protection")
              if conversion.enhanced_protection.length > 0 && (paymentCount !== 0 || paymentIds.length === 0)
                br
                span.badge.badge-pill.badge-success
                  = t("Conversion Credit:")
                  = " "
                  = dayjs().add(_.sumBy(conversion.enhanced_protection, "duration"), "ms").locale(ctx.locale).fromNow(true)
          else if user.plan === 'enterprise'
            p.text-muted.small
              = t("Enterprise plan modifications require admin assistance. Contact support to modify your plan.")
          if ['enhanced_protection', 'team', 'enterprise'].includes(user.plan)
            form.confirm-prompt(
              action=l("/my-account/billing/upgrade"),
              method="GET"
            )
              input(type="hidden", name="plan", value="free")
              button.btn.btn-block.btn-danger(type="submit")= t("Downgrade to Free")
        .modal-footer
          button.btn.btn-lg.btn-block.btn-secondary(
            type="button",
            data-dismiss="modal",
            aria-label=t("Cancel")
          )= t("Cancel")

  .min-vh-80.d-flex.flex-column
    .container.py-3
      .row
        .col
          include ../../_breadcrumbs

      - const hasPlanExpired = user.plan !== "free" && new Date(user[config.userFields.planExpiresAt]).getTime() < Date.now();
      - const hasSubscription = isSANB(user[config.userFields.stripeSubscriptionID]) || isSANB(user[config.userFields.paypalSubscriptionID]);

      if user.plan !== 'free' && (hasPlanExpired || hasSubscription)
        .container
          .row
            .col
              .alert.text-center.mb-0(
                class=hasPlanExpired ? "alert-danger" : "alert-success"
              )
                if hasPlanExpired && !hasSubscription
                  != t('Your plan expired on <span class="notranslate dayjs" data-time="%d" data-time-style="false">%s</span>.', new Date(user[config.userFields.planExpiresAt]).getTime(), dayjs(user[config.userFields.planExpiresAt]).locale(ctx.locale).format("M/D/YY"))
                  = " "
                  = t("Make payment immediately to avoid account termination.")
                else
                  = emoji("tada")
                  = " "
                  != t('You have an active <span class="notranslate">%s</span> subscription.', isSANB(user[config.userFields.stripeSubscriptionID]) ? t("card, wallet, or bank") : "PayPal")

    .container.py-3.py-sm-5.position-relative
      .row.d-flex.flex-row.align-content-between.flex-wrap.align-items-stretch
        if user.plan !== 'free'
          .col-12.col-lg-6.d-flex
            .d-flex.flex-column.flex-grow-1.align-items-center.rounded-lg
              h2.mb-0
                if hasSubscription
                  = t("Auto-renew enabled")
                else
                  = t("Auto-renew disabled")
              if !hasPlanExpired
                .alert.alert-warning.small.mt-3.mb-0
                  != t('Next payment due <span class="notranslate dayjs" data-time="%d" data-time-style="false">%s<span> on <span class="notranslate">%s</span>.', new Date(user[config.userFields.planExpiresAt]).getTime(), dayjs(user[config.userFields.planExpiresAt]).locale(ctx.locale).fromNow(), dayjs(user[config.userFields.planExpiresAt]).locale(ctx.locale).format("M/D/YY"))
              ul.list-inline.text-center.mb-0
                li.list-inline-item
                  a.btn.btn-sm.btn-primary.mt-3(
                    href=l("/my-account/billing/make-payment")
                  )= t("Make Payment")
                if isSANB(user[config.userFields.stripeSubscriptionID])
                  li.list-inline-item
                    form.ajax-form(
                      action=l("/my-account/billing/update-card"),
                      method="POST"
                    )
                      button.btn.btn-sm.btn-dark.mt-3(type="submit")= t("Update Payment Method")
                if hasSubscription
                  li.list-inline-item
                    form.confirm-prompt(
                      action=l("/my-account/billing"),
                      method="POST"
                    )
                      input(type="hidden", name="_method", value="DELETE")
                      button.btn.btn-sm.btn-danger.mt-3(type="submit")
                        = t("Disable Auto-Renew")
                else
                  li.list-inline-item
                    a.btn.btn-sm.btn-success.mt-3(
                      href=l("/my-account/billing/enable-auto-renew")
                    )= t("Enable Auto-Renew")
        .col-12.d-flex(class=user.plan === "free" ? false : "col-lg-6")
          .mt-3.mt-sm-5.mt-lg-0.d-flex.flex-column.flex-grow-1.align-items-center.rounded-lg
            if isUbuntuBilling
              picture.mb-3
                source(
                  srcset=manifest("img/ubuntu-one-mono-logo.svg"),
                  media="(prefers-color-scheme: dark)"
                )
                img(
                  src=manifest("img/ubuntu-one-mono-logo-dark.svg"),
                  width=98,
                  height=40,
                  alt=t("Ubuntu One")
                )
              .alert.alert-success.small.text-center
                strong= t("You're on a verified Launchpad team via Ubuntu One.")
              if user.plan === "free"
                .alert.alert-warning.small.text-center
                  != t("You don't need to upgrade unless you add custom domain names.")
            h2= t(titleize(humanize(user.plan)))
            .small.text-muted.text-uppercase.mb-3
              != t('Plan started on <span class="notranslate" data-time="%d" data-time-style="false">%s</span>', new Date(user[config.userFields.planSetAt]).getTime(), dayjs(user[config.userFields.planSetAt]).format("M/D/YY"))
            button.btn.btn-sm.btn-dark.btn-success(
              type="button",
              data-toggle="modal",
              data-target="#modal-change-plan"
            )= t("Change Plan")

    //- STORAGE UPGRADE SECTION
    .container.py-3.py-sm-5
      .row
        .col
          h3.text-center.mb-3= t("Add-ons")
      .row
        .col-md-6
          form.ajax-form.confirm-prompt(
            method="POST",
            action=l("/my-account/billing/upgrade-request"),
            data-confirm-prompt-title=t("Upgrade Request: Storage"),
            data-confirm-prompt-html=t("We will review your request and reach out shortly via email. Once approved, weâ€™ll send you a secure payment link to complete your upgrade. Ready to proceed?")
          )
            input(type="hidden", name="kind", value="storage_limit")
            .card.border-themed
              h2.h6.card-header= t("Storage Upgrade")
              .card-body.pb-0
                p
                  strong= t("Current:")
                  = " "
                  = bytes(user.max_quota_per_alias)
                .form-group
                  label(for="storage-upgrade-option")= t("Storage Upgrade Amount:")
                  select#storage-upgrade-option.form-control(
                    name="upgrade_option",
                    required
                  )
                    option(value="", disabled, selected)= t("Choose your storage upgrade...")
                    each amount in [10,20,30,40,50]
                      option(value=`+${amount} GB`)= `+${amount} GB`
                    option(value="Other")= t("Other")
              .card-footer
                button.btn.btn-success.btn-lg.btn-block(type="submit")
                  = t("Request Upgrade")
        .col-md-6
          form.ajax-form.confirm-prompt(
            method="POST",
            action=l("/my-account/billing/upgrade-request"),
            data-confirm-prompt-title=t("Upgrade Request: Outbound SMTP Limit"),
            data-confirm-prompt-html=t("We will review your request and reach out shortly via email. Once approved, weâ€™ll send you a secure payment link to complete your upgrade. Ready to proceed?")
          )
            input(type="hidden", name="kind", value="smtp_limit")
            .card.border-themed
              h2.h6.card-header= t("Outbound SMTP Limit Upgrade")
              .card-body.pb-0
                p
                  strong= t("Current:")
                  = " "
                  = user[config.userFields.smtpLimit] || config.smtpLimitMessages
                  = " "
                  = "("
                  = t("per day")
                  = ")"
                .form-group
                  label(for="smtp-upgrade-option")= t("SMTP Upgrade Amount:")
                  select#smtp-upgrade-option.form-control(
                    name="upgrade_option",
                    required
                  )
                    option(value="", disabled, selected)= t("Choose your SMTP upgrade...")
                    each amount in [1000,2000,3000]
                      option(value=`+${amount} emails daily`)= `+${amount} emails daily`
                    option(value="Other")= t("Other")
              .card-footer
                button.btn.btn-success.btn-lg.btn-block(type="submit")
                  = t("Request Upgrade")

    if payments.length > 0
      .container
        .row
          .col
            h3.text-center.mb-3= t("Receipts")
            //-.
              form.ajax-form.table-ajax-form.mb-3.px-3(
                action=ctx.path,
                method="GET",
                data-table="#table-payments"
              )
                .form-row
                  .col.form-group.floating-label
                    input#input-keyword-search.form-control(
                      type="text",
                      value=ctx.query.keyword ? ctx.query.keyword : '',
                      name="keyword",
                      placeholder=t("Keyword")
                    )
                    label(for="input-keyword-search")= t('Keyword')
                .form-row
                  .col.form-group.floating-label
                    input#input-start-date.form-control(
                      type="date",
                      value=ctx.query.start_date ? ctx.query.start_date : '',
                      name="start_date"
                    )
                    label(for="input-start-date")= t('Start Date')
                  .col.form-group.floating-label
                    input#input-end-date.form-control(
                      type="date",
                      value=ctx.query.end_date ? ctx.query.end_date : '',
                      name="end_date"
                    )
                    label(for="input-end-date")= t('End Date')
                .row
                  .col
                    button.btn.btn-success.btn-block(type="submit")= t('Search')
            #table-payments.mb-0
              include ./_table.pug
