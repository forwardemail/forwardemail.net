
extends ../../layout

block body
  if modalFAQTable
    #modal-faq-table.modal.fade(tabindex='-1', role='dialog', aria-labelledby='modal-faq-table-title', aria-hidden='true')
      .modal-dialog.modal-lg(role='document')
        .modal-content
          .modal-header.text-center.d-block
            h4.modal-title.d-inline-block.ml-4#modal-faq-table-title= t('DNS Management by Registar')
            button(type='button', data-dismiss='modal', aria-label='Close').close
              span(aria-hidden='true') &times;
          .modal-body!= modalFAQTable

  if domain.group === 'admin' && domain.plan === 'team'
    #modal-invite.modal.fade(tabindex='-1', role='dialog', aria-labelledby='modal-invite-title', aria-hidden='true')
      .modal-dialog(role='document')
        .modal-content
          .modal-header.text-center.d-block
            h4.modal-title.d-inline-block.ml-4#modal-invite-title= t('Invite new team member')
            button(type='button', data-dismiss='modal', aria-label='Close').close
              span(aria-hidden='true') &times;
          .modal-body
            form.ajax-form.confirm-prompt(action=l(`/my-account/domains/${domain.id}/invites`), method="POST")
              input(type="hidden", name="_csrf", value=ctx.csrf)
              .form-group
                label(for="input-invite-email")= t('Email address')
                input#input-invite-email.form-control(required, autocomplete="off", name="email", type="email", placeholder='name@example.com')
              label= t('Group')
              .form-group
                .form-check.form-check-inline
                  input.form-check-input#input-invite-group-user(type='radio', name='group', value='user', checked)
                  label.form-check-label(for='input-invite-group-user')= t('User')
                .form-check.form-check-inline
                  input.form-check-input#input-invite-group-admin(type='radio', name='group', value='admin')
                  label.form-check-label(for='input-invite-group-admin')= t('Admin')
              button.btn.btn-block.btn-success.btn-lg(type="submit")= t('Send invitation')
    #modal-copy-invite.modal.fade(tabindex='-1', role='dialog', aria-labelledby='modal-copy-invite-title', aria-hidden='true')
      .modal-dialog.modal-lg(role='document')
        .modal-content
          .modal-header.text-center.d-block
            h4.modal-title.d-inline-block.ml-4#modal-copy-invite-title= t('Share invitation link')
            button(type='button', data-dismiss='modal', aria-label='Close').close
              span(aria-hidden='true') &times;
          .modal-body
            .input-group.input-group-lg
              input(type='text', readonly, value=`${config.urls.web}/my-account/domains/${domain.id}/invites`).form-control#invite-link
              .input-group-append
                button(type='button', data-toggle="clipboard", data-clipboard-target="#invite-link").btn.btn-primary
                  i.fa.fa-clipboard
                  = ' '
                  = t('Copy Invite Link')
  .container-fluid.pt-3
    .row
      .col
        include ../../_breadcrumbs
  .py-5.bg-dark.text-center
    h2.display-5.font-weight-light.mb-3.text-uppercase.text-white= t('Verification Status')
    p.px-5.text-white= t('Follow the steps below and then click "Verify Records" to verify your setup.')
    ul.list-inline
      li.list-inline-item
        button(type='button', data-placement='bottom', data-toggle='tooltip', data-title=domain.has_mx_record ? t('Verified') : t('Not Verified'), class=domain.has_mx_record ? 'text-success' : 'text-danger').btn.btn-link
          i.fa.fa-4x(class=domain.has_mx_record ? 'fa-check' : 'fa-times')
        .text-monospace.text-uppercase.text-white= t('MX Records')
      li.list-inline-item
        button(type='button', data-placement='bottom', data-toggle='tooltip', data-title=domain.has_txt_record ? t('Verified') : t('Not Verified'), class=domain.has_txt_record ? 'text-success' : 'text-danger').btn.btn-link
          i.fa.fa-4x(class=domain.has_txt_record ? 'fa-check' : 'fa-times')
        .text-monospace.text-uppercase.text-white= t('TXT Records')
    if domain.group === 'admin'
      form.ajax-form(action=l(`/my-account/domains/${domain.id}/verify-records`), method="POST")
        input(type="hidden", name="_csrf", value=ctx.csrf)
        button(type='submit').btn.btn-success.btn-lg
          i.fa.fa-refresh
          = ' '
          = t('Verify Records')
      if domain.plan !== 'free'
        .container
          .col-md-8.offset-md-2
            .card.mt-5
              h5.card-header= t('Enhanced Protection Verification Record')
              .card-body
                p!= t('Set this <strong>TXT record</strong> as a new DNS entry on your domain:')
                .input-group
                  input(type='text', readonly, value=`${config.recordPrefix}-site-verification=${domain.verification_record}`).form-control#verification-record
                  .input-group-append
                    button(type='button', data-toggle="clipboard", data-clipboard-target="#verification-record").btn.btn-primary
                      i.fa.fa-clipboard
                      = ' '
                      = t('Copy')
                if modalFAQTable
                  .text-center.mt-3
                    button(type='button', data-toggle='modal', data-target='#modal-faq-table').btn.btn-link.btn-sm Need help navigating to your DNS management page?
  .container-fluid.py-5
    .position-relative
      .d-flex.flex-row.align-content-between.flex-wrap.align-items-stretch
        .col-12.col-lg-6.d-flex
          .p-5.m-2.mt-lg-0.rounded-lg.border.border-dark.bg-white.border-dark-50.border.d-flex.flex-column.flex-grow-1.align-items-start
            h2.display-5.font-weight-bold.mb-3= t('1. Set up your domain for email forwarding')
            p.lead.mb-3= t("Do you need to configure (or re-configure) this domain name for email forwarding?")
            a.mt-auto(href=l(`/faq?domain=${domain.name}#how-do-i-get-started-and-set-up-email-forwarding`), target='_blank', rel='noopener').stretched-link.btn.btn-lg.btn-outline-dark
              = t('Configure your domain')
              = ' '
              i.fa.fa-angle-double-right
        .col-12.col-lg-6.d-flex
          .p-5.mt-5.mt-lg-0.mt-md-2.m-2.rounded-lg.border.border-dark.bg-white.border-dark-50.border.d-flex.flex-column.flex-grow-1.align-items-start
            h2.display-5.font-weight-bold.mb-3= t('2. Send emails with your domain using Gmail (optional)')
            p.lead.mb-3!= t('Follow our simple guide for sending and receiving emails with your domain, directly inside of Gmail.')
            a.mt-auto(href=l(`/faq?domain=${domain.name}#how-to-send-mail-as-using-gmail`), target='_blank', rel='noopener').stretched-link.btn.btn-lg.btn-outline-dark
              = t('Setup your Gmail')
              = ' '
              i.fa.fa-angle-double-right
        .col-12.col-lg-6.d-flex
          .p-5.m-2.mb-lg-0.rounded-lg.border.border-dark.bg-white.border-dark-50.border.d-flex.flex-column.flex-grow-1.align-items-start
            h2.display-5.font-weight-bold.mb-3= t('3. Purge Cache and Send a Test Email to Yourself')
            p.lead.mb-3!= t('Once you have followed the previous step(s), you will need to "purge" the DNS cache using the "Purge Cache" tool by Cloudflare.  You can optionally purge the cache using Google as well if you are using Gmail.  Make sure to purge both the "TXT" and the "MX" records on your domain name\'s DNS records.  Wait a few minutes (or sometimes it might take an hour or two), and then click "Verify Records" above and try sending a test email to yourself.')
            ul.list-inline.mt-auto
              li.list-inline-item
                a(href='https://1.1.1.1/purge-cache/', target='_blank', rel='noopener').btn.btn-lg.btn-outline-dark
                  = t('Cloudflare Purge (required)')
                  = ' '
                  i.fa.fa-angle-double-right
              li.list-inline-item
                a(href='https://developers.google.com/speed/public-dns/cache', target='_blank', rel='noopener').btn.btn-lg.btn-outline-dark
                  = t('Google Purge (optional)')
                  = ' '
                  i.fa.fa-angle-double-right
        .col-12.col-lg-6.d-flex
          .p-5.m-2.mb-lg-0.rounded-lg.border.border-dark.bg-white.border-dark-50.border.d-flex.flex-column.flex-grow-1.align-items-start
            h2.display-5.font-weight-bold.mb-3= t('4. Still need help with something?')
            p.lead.mb-3!= t(`We are here to answer your questions, but before asking us, please be sure to <a href="${l('/faq')}">read our FAQ section</a>.`)
            a.mt-auto(href=l('/help'), role='button', data-toggle='modal-anchor', data-target='#modal-help').stretched-link.btn.btn-lg.btn-outline-dark
              = t('Ask us a question')
              = ' '
              i.fa.fa-angle-double-right
    if domain.group === 'admin' && domain.plan === 'team'
      .row.mt-5
        .col
          .card
            h4.card-header= t('Manage Team')
            .card-body
              p= t('Members have shared access to this domain, and you can invite new members, remove existing members, or manage permissions for them below.')
              .table-responsive
                table.table.table-hover.table-bordered
                  thead.thead-dark
                    tr
                      th(scope='col')= t('Team Member')
                      th(scope='col').text-center= t('Alias Count')
                      if domain.members.length > 1
                        th(scope='col').text-center.text-md-left= t('Quick Links')
                  tbody
                    each member in domain.members
                      //- member.user (Object) and member.group (String)
                      //- member.user.id (String)
                      //- member.user.email (String)
                      tr
                        td.align-middle= member.user.email
                        td.align-middle.text-center
                          .h3.mb-0: span.badge.badge-pill.badge-dark.text-monospace.font-weight-normal= member.alias_count
                        if domain.members.length > 1
                          td.align-middle
                            ul.list-inline.mb-0
                              li.list-inline-item
                                form(action=l(`/my-account/domains/${domain.id}/members/${member.user.id}`), method='POST').ajax-form.confirm-prompt.d-inline-block
                                  input(type="hidden", name="_csrf", value=ctx.csrf)
                                  input(type='hidden', name='_method', value='PUT')
                                  input(type='hidden', name='group', value=member.group === 'admin' ? 'user' : 'admin')
                                  button(type='submit').btn.btn-dark= member.group === 'admin' ? t('Make User') : t('Make Admin')
                              //- if member.user.id !== user.id
                              li.list-inline-item
                                form(action=l(`/my-account/domains/${domain.id}/members/${member.user.id}`), method='POST').ajax-form.confirm-prompt.d-inline-block
                                  input(type="hidden", name="_csrf", value=ctx.csrf)
                                  input(type='hidden', name='_method', value='DELETE')
                                  button(type='submit').btn.btn-danger
                                    i.fa.fa-trash
                                    = ' '
                                    = t('Delete Member')
              if Array.isArray(domain.invites) && domain.invites.length > 0
                p= t('Pending invitations are listed below.')
                .table-responsive
                  table.table.table-hover.table-bordered
                    thead.thead-dark
                      tr
                        th(scope='col')= t('Email Address')
                        th(scope='col')= t('Group')
                        th(scope='col')= t('Quick Links')
                      tbody
                        each invite in domain.invites
                          tr
                            td.align-middle= invite.email
                            td.align-middle= titleize(invite.group)
                            td.align-middle
                              ul.list-inline.mb-0
                                //- copy invite link
                                li.list-inline-item
                                  button(type='button', data-toggle='modal', data-target='#modal-copy-invite').btn.btn-primary
                                    i.fa.fa-clipboard
                                    = ' '
                                    = t('Copy Invite Link')
                                //- delete invite
                                li.list-inline-item
                                  form(action=l(`/my-account/domains/${domain.id}/invites`), method='POST').ajax-form.confirm-prompt.d-inline-block
                                    input(type="hidden", name="_csrf", value=ctx.csrf)
                                    input(type='hidden', name='_method', value='DELETE')
                                    input(type='hidden', name='email', value=invite.email)
                                    button(type='submit').btn.btn-danger
                                      i.fa.fa-trash
                                      = ' '
                                      = t('Delete Invite')

            .card-footer.text-right
              //- TODO: this should be a right-clickable link with re-usable form in the modal (and modal-anchor)
              button(type='button', data-target='#modal-invite', data-toggle='modal').btn.btn-dark
                i.fa.fa-user-plus
                = ' '
                = t('Invite New Member')
    if domain.group === 'admin'
      .row.mt-5
        .col
          .card
            h4.card-header= t('Delete Domain')
            .card-body
              = t('Deleting your domain is irreversable.  Please take extreme caution when deleting your domain.')
            .card-footer.text-right
              form(action=l(`/my-account/domains/${domain.id}`), method='POST').ajax-form.confirm-prompt
                input(type='hidden', name='_method', value='DELETE')
                input(type="hidden", name="_csrf", value=ctx.csrf)
                button(type='submit').btn.btn-danger
                  i.fa.fa-trash
                  = ' '
                  = t('Delete Domain')
    .row.text-center.mt-5
      .col
        a(href=l('/my-account/domains')).btn.btn-outline-secondary
          i.fa.fa-angle-double-left
          = ' '
          = t('Back to Domains')
